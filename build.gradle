buildscript {
  repositories {
    jcenter()
    maven { url 'https://plugins.gradle.org/m2' }
  }
  dependencies {
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
  }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

group='com.codeborne'
archivesBaseName = 'xls-test'
version='1.3-SNAPSHOT'

[compileJava, compileTestJava]*.options.collect {options -> options.encoding = 'UTF-8'}
[compileJava, compileTestJava]*.options.collect {options -> options.debug = true}
compileJava.options.debugOptions.debugLevel = "source,lines,vars"

sourceCompatibility = 1.7
targetCompatibility = 1.7

defaultTasks 'test', 'install'

dependencies {
  compile group: 'net.sf.jxls', name: 'jxls-core', version: '1.0.6', transitive: true
  compile group: 'net.sf.jxls', name: 'jxls-reader', version: '1.0.6', transitive: true
  compile group: 'org.apache.commons', name: 'commons-jexl', version: '2.1.1', transitive: true
  compile group: 'org.apache.poi', name: 'poi', version: '3.13', transitive: true
  compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.13', transitive: true
  compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '3.13', transitive: true

  compile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3', transitive: false
  testCompile group: 'junit', name: 'junit', version: '4.12', transitive: false
  testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3', transitive: false
}

repositories{
  mavenCentral()
}

task libs(type: Sync) {
  from configurations.compile
  from configurations.testCompile
  into "$buildDir/lib"
}

compileJava.dependsOn libs

test {
  include 'com/codeborne/xlstest/**/*'
  systemProperties['file.encoding'] = 'UTF-8'
  testLogging.showStandardStreams = true
  jacoco {
    enabled = true
  }
}

jar {
  manifest {
    attributes(
      "Implementation-Title": project.group + '.' + project.name,
      "Implementation-Version": version,
      "Implementation-Vendor": "Codeborne")
  }
}

task sourcesJar(type: Jar, dependsOn:classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

javadoc {
  failOnError=false
}

task javadocJar(type: Jar, dependsOn:javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives jar
  archives sourcesJar
  archives javadocJar
}

task wrapper(type: Wrapper) {
  gradleVersion = '3.1'
  jarFile = './gradle-wrapper/gradle-wrapper.jar'
  scriptFile = './gradle'
}

jacocoTestReport {
  reports {
    xml.enabled true
    html.enabled true
  }
}

tasks.coveralls {
  onlyIf { System.env.'CI' }
}
